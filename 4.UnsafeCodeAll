using System;

namespace UnsafeCodeExample
{
    internal class Program
    {
        // 1️⃣ Example for pointer basics
        static unsafe void unsafeExample1()
        {
            int num = 33;
            int* p = &num;

            Console.WriteLine("Value of num: " + num);
            Console.WriteLine("Address of num: " + (long)p); // safer address print
            Console.WriteLine("Value at address p: " + *p);
        }

        // 2️⃣ Method to swap two numbers using pointers
        public unsafe void swap(int* x, int* y)
        {
            int temp = *x;
            *x = *y;
            *y = temp;
        }

        // 3️⃣ Main Method
        static unsafe void Main(string[] args)
        {
            // Pointer basics
            unsafeExample1();

            // Swapping two numbers
            int a = 10;
            int b = 20;
            Program pro = new Program();

            Console.WriteLine($"\nBefore Swap: a={a}, b={b}");

            int* p1 = &a;
            int* p2 = &b;

            pro.swap(p1, p2);

            Console.WriteLine($"After Swap:  a={a}, b={b}");

            // Arrays and pointers
            Console.WriteLine("\nArrays and Pointers Example:");

            int[] arr = { 10, 20, 30, 40, 50 };
            fixed (int* p = arr)
            {
                for (int i = 0; i < arr.Length; i++)
                {
                    Console.WriteLine($"Element {i} -> Address: {(long)(p + i)}, Value: {*(p + i)}");
                }
            }

            Console.ReadLine();
        }
    }
}
